# "handlers" specifies a comma separated list of log Handler
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels
handlers=java.util.logging.ConsoleHandler, java.util.logging.FileHandler

# Rappels sur les niveaux : OFF / SEVERE / WARNING / INFO / CONFIG / FINE / FINER / FINEST / ALL
# On limite tous les logs des autres composants (des autres packages) à l'affichage des erreurs.
.level=ALL

# On active les logs du package fr.fidtec.loggers.jul.Jul_Test sur INFO (et donc WARNING et SEVERE).
fr.fidtec.loggers.jul.level=WARNING
#fr.fidtec.loggers.jul.handler=java.util.logging.FileHandler
#additivity 
fr.fidtec.loggers.jul.useParentHandlers=true

#fr.fidtec_bis.handler=fr.fidtec.loggers.jul.AnotherJULTestingFileHandler
#fr.fidtec_bis.level=INFO

# On peut configurer le ConsoleHandler, mais ici on utilise sa configuration par défaut.
#java.util.logging.ConsoleHandler.level = INFO
#java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter (c'est par défaut)

# On configure notre FileHandler (il utilise lui aussi un SimpleFormatter).
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
java.util.logging.FileHandler.pattern=F:\\Logs\\POC_JUL-%u-%g.log

# On configure notre FileHandler (il utilise lui aussi un SimpleFormatter).
#fr.fidtec.loggers.jul.AnotherJULTestingFileHandler.formatter=java.util.logging.SimpleFormatter
#fr.fidtec.loggers.jul.AnotherJULTestingFileHandler.pattern=F:\\Logs\\POC_JUL_Another-%u-%g.log

# On change le format des logs pour notre SimpleFormatter. %5$s : message.  %6$s :  print the stack trace.
#java.util.logging.SimpleFormatter.format=[%1$s] %4$-10s | (%3$s) %2$-50s | %5$s | %6$s \n


